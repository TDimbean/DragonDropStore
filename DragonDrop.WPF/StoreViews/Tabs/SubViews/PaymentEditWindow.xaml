<Window x:Class="DragonDrop.WPF.StoreViews.Tabs.SubViews.PaymentEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DragonDrop.WPF.StoreViews.Tabs.SubViews"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:beh="clr-namespace:DragonDrop.WPF"
        xmlns:my="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Edit Payment Record" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        
            <Style TargetType="StackPanel">
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
            </Style>
            <Style TargetType="Image">
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style x:Key="Header" TargetType="Label">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="Consolas"/>
                <Setter Property="FontSize" Value="40"/>
                <Setter Property="Padding" Value="6 0"/>
            </Style>
            <Style x:Key="SubmitBtnStyle" TargetType="Button">
                <Setter Property="Padding" Value="20"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="FontFamily" Value="Adobe Heiti Std R"/>
            </Style>
            <Style x:Key="ErrorStyle" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="Crimson"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
            <Style x:Key="ErrorBorderBrush" TargetType="Border">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="CornerRadius" Value="12"/>
            </Style>
            <SolidColorBrush x:Key="AccentColour">Goldenrod</SolidColorBrush>
            <my:Double x:Key="FullEntryBoxWidth">400</my:Double>
        
    </Window.Resources>

    <StackPanel Orientation="Vertical">

        <!--Header-->
        <Grid>
            <Grid.Resources>
                
                    <Style x:Key="DividsStyle" TargetType="Rectangle">
                        <Setter Property="Stroke" Value="Black"/>
                        <Setter Property="Height" Value="2"/>
                        <Setter Property="Width" Value="80"/>
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Setter Property="StrokeDashArray" Value="2"/>
                    </Style>
                
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Style="{StaticResource DividsStyle}"/>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                <Image Source="pack://application:,,,/Art/payments.png" Height="60"/>
                <Label Content="Edit Payment" Style="{StaticResource Header}"/>
            </StackPanel>
            <Rectangle Grid.Column="2" Style="{StaticResource DividsStyle}"/>
        </Grid>

        <!--Body-->
        <StackPanel>
            <StackPanel.Resources>
                
                    <my:Double x:Key="HalfBoxWidth">180</my:Double>
                    <Style TargetType="Label">
                        <Setter Property="FontSize" Value="24"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                    <Style TargetType="Image">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="Margin" Value="0 0 8 0"/>
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="22"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <EventSetter Event="KeyUp" Handler="TextBox_KeyUp"/>
                        <Setter Property="Foreground" Value="DarkGray"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                    </Style>
                    <my:Double x:Key="HalfEntryWidth">230</my:Double>
                    <Style x:Key="EntryPanel" TargetType="StackPanel">
                        <Setter Property="Orientation" Value="Vertical"/>
                        <Setter Property="Margin" Value="0 0 0 6"/>
                    </Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                     </Style>
                
            </StackPanel.Resources>

            <!--Customer ID-->
            <StackPanel Style="{StaticResource EntryPanel}"
                        ToolTip="Required Field. Must be the ID of a Customer." Background="{StaticResource AccentColour}">
                <DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/Art/person.png"/>
                    <TextBox Text="{Binding CustEntryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Name="CustBox"
                             Width="{StaticResource FullEntryBoxWidth}" MaxLength="50">
                        <i:Interaction.Behaviors>
                            <beh:EventToCommandBehavior Command="{Binding CustBoxLostFocusCommand}" Event="LostFocus" PassArguments="False"/>
                            <beh:EventToCommandBehavior Command="{Binding CustBoxTextChangedCommand}" Event="TextChanged" 
                                                        PassArguments="False"/>
                        </i:Interaction.Behaviors>
                    </TextBox>

                </StackPanel>
                    <Button ToolTip="Reset Value" HorizontalAlignment="Right">
                        <Image Source="pack://application:,,,/Art/reset.png" Margin="0"/>
                        <i:Interaction.Behaviors>
                            <beh:EventToCommandBehavior Command="{Binding CustResetCommand}" Event="Click" PassArguments="False"/>
                        </i:Interaction.Behaviors>
                    </Button>
                    
                </DockPanel>
                <Grid HorizontalAlignment="Center" Margin="0 6" Visibility="{Binding CustErrorVisibility}">
                    <Border Style="{StaticResource ErrorBorderBrush}">
                        <Border.BorderBrush>
                            <DrawingBrush Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="White">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0,50,50" />
                                                    <RectangleGeometry Rect="50,50,50,50" />
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Border.BorderBrush>

                        <TextBlock Text="{Binding CustErrorText}" Style="{StaticResource ErrorStyle}" Foreground="White"/>
                    </Border>
                </Grid>
            </StackPanel>
            <!--Method-->
            <StackPanel Style="{StaticResource EntryPanel}" Orientation="Horizontal">
                <Image Source="pack://application:,,,/Art/payMethod.png"/>
                <ComboBox ItemsSource="{Binding Methods}" 
                              DisplayMemberPath="Name" IsEditable="True" IsReadOnly="True" 
                              Text="Payment Method" SelectionChanged="MethodCombo_SelectionChanged"
                              FontSize="18"  Width="200"
                              HorizontalAlignment="Center" VerticalAlignment="Center"
                              HorizontalContentAlignment="Center"
                              SelectedItem="{Binding SelectedMethod, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                              KeyUp="Combo_KeyUp" SelectedIndex="{Binding SelIndex}">
                </ComboBox>
                <Button ToolTip="Reset Value">
                    <Image Source="pack://application:,,,/Art/reset.png" Margin="0"/>
                    <i:Interaction.Behaviors>
                        <beh:EventToCommandBehavior Command="{Binding MethResetCommand}" Event="Click" PassArguments="False"/>
                    </i:Interaction.Behaviors>
                </Button>
            </StackPanel>
            <!--Amount-->
            <StackPanel Style="{StaticResource EntryPanel}" Background="{StaticResource AccentColour}"
                        ToolTip="Must be a valid decimal ammount(can be set later)">
                <DockPanel>
                    
                <StackPanel Orientation="Horizontal">
                    <Image Source="pack://application:,,,/Art/money.png"/>
                    <TextBox Text="{Binding AmountEntryText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 PreviewTextInput="AmountBox_PreviewTextInput" Width="{StaticResource FullEntryBoxWidth}">
                        <i:Interaction.Behaviors>
                            <beh:EventToCommandBehavior Command="{Binding AmountBoxLostFocusCommand}" Event="LostFocus" PassArguments="False"/>
                            <beh:EventToCommandBehavior Command="{Binding AmountBoxTextChangedCommand}" Event="TextChanged" PassArguments="False"/>
                        </i:Interaction.Behaviors>
                    </TextBox>
                </StackPanel>
                    <Button ToolTip="Reset Value" DockPanel.Dock="Right" HorizontalAlignment="Right">
                        <Image Source="pack://application:,,,/Art/reset.png" Margin="0"/>
                        <i:Interaction.Behaviors>
                            <beh:EventToCommandBehavior Command="{Binding AmountResetCommand}" Event="Click" PassArguments="False"/>
                        </i:Interaction.Behaviors>
                    </Button>
                </DockPanel>
                <Grid HorizontalAlignment="Center" Margin="0 6" Visibility="{Binding AmountErrorVisibility}">
                    <Border Style="{StaticResource ErrorBorderBrush}">
                        <Border.BorderBrush>
                            <DrawingBrush Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="White">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0,50,50" />
                                                    <RectangleGeometry Rect="50,50,50,50" />
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Border.BorderBrush>

                        <TextBlock Text="{Binding AmountErrorText}" Style="{StaticResource ErrorStyle}" Foreground="White"/>
                    </Border>
                </Grid>
            </StackPanel>
            <!--Date-->
            <StackPanel Orientation="Horizontal" ToolTip="Can be set at a later time if Payment is promised but not yet confirmed.">
                <Image Source="pack://application:,,,/Art/calendar.png" VerticalAlignment="Top"/>
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBox Text="{Binding DateEntryText, StringFormat=d, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Width="{StaticResource FullEntryBoxWidth}">
                            <i:Interaction.Behaviors>
                                <beh:EventToCommandBehavior Command="{Binding DateBoxLostFocusCommand}" Event="LostFocus" PassArguments="False"/>
                                <beh:EventToCommandBehavior Command="{Binding DateBoxTextChangedCommand}" Event="TextChanged" PassArguments="False"/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <Button Background="{x:Null}" BorderBrush="{x:Null}" VerticalContentAlignment="Center"
                                Margin="0" Padding="0" ToolTip="Use Date Picker">
                            <Image  Source="pack://application:,,,/Art/datePicker.png" Height="30"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
                            <i:Interaction.Behaviors>
                                <beh:EventToCommandBehavior Command="{Binding ToggleCalendarCommand}" Event="Click" PassArguments="False"/>
                            </i:Interaction.Behaviors>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <Button ToolTip="Reset Value">
                    <Image Source="pack://application:,,,/Art/reset.png" Margin="0"/>
                    <i:Interaction.Behaviors>
                        <beh:EventToCommandBehavior Command="{Binding DateResetCommand}" Event="Click" PassArguments="False"/>
                    </i:Interaction.Behaviors>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Calendar SelectedDate="{Binding SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              DisplayDate="{Binding DispDate}" Visibility="{Binding CalVisibility}"
                          IsTodayHighlighted="False" SelectionMode="SingleDate" DisplayMode="Month" FirstDayOfWeek="Monday"
                               Margin="0" Padding="0">
                    <i:Interaction.Behaviors>
                        <beh:EventToCommandBehavior Command="{Binding DatePickerSelChangedCommand}"
                                                    Event="SelectedDatesChanged" PassArguments="False"/>
                    </i:Interaction.Behaviors>
                </Calendar>

                <Grid HorizontalAlignment="Center" Margin="0 6" Visibility="{Binding DateErrorVisibility}" MaxWidth="400">
                    <Border Style="{StaticResource ErrorBorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Border.BorderBrush>
                            <DrawingBrush Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
                                <DrawingBrush.Drawing>
                                    <DrawingGroup>
                                        <GeometryDrawing Brush="Crimson">
                                            <GeometryDrawing.Geometry>
                                                <GeometryGroup>
                                                    <RectangleGeometry Rect="0,0,50,50" />
                                                    <RectangleGeometry Rect="50,50,50,50" />
                                                </GeometryGroup>
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Border.BorderBrush>

                        <TextBlock Text="{Binding DateErrorText}" Style="{StaticResource ErrorStyle}" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                    </Border>
                </Grid>
            </StackPanel>

            <!--Submit Button-->
            <Grid>
                <Rectangle StrokeDashArray="3" Stroke="Black" StrokeThickness="3" Fill="{x:Null}" StrokeDashCap="Triangle"/>
                <Button Content="Submit" Style="{StaticResource SubmitBtnStyle}">
                    <i:Interaction.Behaviors>
                        <beh:EventToCommandBehavior Command="{Binding SubmitCommand}" Event="Click" PassArguments="False"/>
                    </i:Interaction.Behaviors>
                </Button>
            </Grid>
        </StackPanel>

    </StackPanel>
</Window>
