<Window x:Class="DragonDrop.WPF.StoreViews.Tabs.SubViews.ProcessOrderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:beh="clr-namespace:DragonDrop.WPF"
        xmlns:conv="clr-namespace:DragonDrop.WPF.StoreViews.Tabs.Converters"
        xmlns:hel="clr-namespace:DragonDrop.WPF.Helpers"
        xmlns:local="clr-namespace:DragonDrop.WPF.StoreViews.Tabs.SubViews"
        xmlns:my="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Process Order" MaxHeight="954" Width="730" WindowStartupLocation="CenterScreen" 
        Margin="0" Padding="0" SizeToContent="Height" ResizeMode="NoResize">
    <Window.Resources>
        <Style TargetType="StackPanel">
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="MaxHeight" Value="380"/>
            <Setter Property="Width" Value="700"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="GridLinesVisibility" Value="Vertical"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="AlternatingRowBackground" Value="LightGray"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>
        <conv:RawCodeToUpcConverter x:Key="upcFormatter"/>
        <my:Double x:Key="HeaderImgSize">30</my:Double>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="TextCellStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Padding" Value="1 0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <Style x:Key="baseTxtBox" TargetType="TextBox">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="24"/>
        </Style>
        <Style x:Key="CheckBtnStyle" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="720"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0 4"/>
        </Style>
        <Style x:Key="CheckTxtBlkStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="500"/>
            <Setter Property="MaxHeight" Value="80"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="DockPanel.Dock" Value="Left"/>
        </Style>
        <Style x:Key="QtyBoxStyle" TargetType="TextBox" BasedOn="{StaticResource baseTxtBox}">
            <Setter Property="Padding" Value="4 8"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="Tag" Value="SelectableTxtBox"/>
        </Style>
    </Window.Resources>
    <StackPanel Width="720" MaxHeight="900" Margin="0">
        <Grid Height="60" Background="DarkSlateGray" >
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="Label">
                        <Setter Property="Foreground" Value="LightGray"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="24"/>
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Background" Value="DarkSlateBlue"/>
                        <Setter Property="Foreground" Value="FloralWhite"/>
                        <Setter Property="FontSize" Value="34"/>
                        <Setter Property="FontFamily" Value="Consolas"/>
                        <Setter Property="Width" Value="140"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="10 0 0 0"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="GhostWhite"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="ToolTip" Value="Set Port"/>
                    </Style>
                </StackPanel.Resources>
            <Label Content="Listening on Port:"/>
                <TextBox Text="{Binding Port}" KeyUp="PortBox_KeyUp"
                     TextChanged="PortBox_TextChanged" PreviewTextInput="PortBox_PreviewTextInput"/>
                <Button>
                    <Image Source="/Art/whiteSwap.png" Height="44"/>
                    <i:Interaction.Behaviors>
                        <beh:EventToCommandBehavior Command="{Binding SetPortCommand}" 
                                                    Event="Click" PassArguments="False"/>
                    </i:Interaction.Behaviors>
                </Button>
            </StackPanel>
        </Grid>
        <DataGrid x:Name="unpDG"
            ItemsSource="{Binding UnprocessedList}" Visibility="{Binding UnProcGridVis}">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" ElementStyle="{StaticResource TextCellStyle}" Width="490"/>
                <DataGridTextColumn Binding="{Binding BarCode, Converter={StaticResource upcFormatter}}"
                                    ElementStyle="{StaticResource TextCellStyle}" 
                                    Width="100" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Quantity}" ElementStyle="{StaticResource TextCellStyle}" 
                                    Width="80"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="checkBtn" IsEnabled="{Binding CanCheck}" Style="{StaticResource CheckBtnStyle}">
            <DockPanel>
                <Image Source="/Art/arrow.png" Height="32" DockPanel.Dock="Left" Margin="0 0 0 4"/>
                <Image Source="/Art/arrow.png" Height="32" DockPanel.Dock="Right" Margin="4 0 0 0"/>
                <TextBlock x:Name="checkBtnTxtBlk" Text="{Binding CurScannedTitle}"
                           Style="{StaticResource CheckTxtBlkStyle}"/>
                <Label Content="X" VerticalAlignment="Center"/>
                <TextBox
                    Text="{Binding CheckQty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource QtyBoxStyle}" KeyUp="QtyBox_KeyUp">
                    <i:Interaction.Behaviors>
                        <beh:EventToCommandBehavior Command="{Binding QtyChangedCommand}"
                                                    Event="TextChanged" PassArguments="False"/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </DockPanel>
            <i:Interaction.Behaviors>
                <beh:EventToCommandBehavior Command="{Binding CheckCommand}" Event="Click" PassArguments="False"/>
            </i:Interaction.Behaviors>
        </Button>
        <DataGrid x:Name="procDG"
            ItemsSource="{Binding ProcessedList}" Visibility="{Binding ProcGridVis}">
        <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" ElementStyle="{StaticResource TextCellStyle}" Width="490"/>
                <DataGridTextColumn Binding="{Binding BarCode, Converter={StaticResource upcFormatter}}"
                                    ElementStyle="{StaticResource TextCellStyle}" 
                                    Width="100" FontWeight="Bold"/>
                <DataGridTextColumn Binding="{Binding Quantity}" ElementStyle="{StaticResource TextCellStyle}" 
                                    Width="80"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Height="64" Margin="0" Background="DarkSlateGray">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="500"/>
            </Grid.ColumnDefinitions>
        <Button Click="Cancel_Click">
            <StackPanel Orientation="Horizontal">
            <Image Source="/Art/whiteCancelFull.png" Height="48"/>
            <Label VerticalAlignment="Center" FontFamily="Consolas" FontSize="28" Foreground="White">Cancel</Label>
            </StackPanel>
        </Button>
            <Button Grid.Column="1" IsEnabled="{Binding CanSubmit}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Art/whiteCheckFull.png" Height="48"/>
                    <Label Content="Submit" VerticalAlignment="Center" FontFamily="Consolas" Foreground="White" FontSize="48" FontWeight="SemiBold"/>
                </StackPanel>
                <i:Interaction.Behaviors>
                    <beh:EventToCommandBehavior Command="{Binding SubmitCommand}" 
                                                Event="Click" PassArguments="False"/>
                </i:Interaction.Behaviors>
            </Button>

        </Grid>
    </StackPanel>
</Window>
